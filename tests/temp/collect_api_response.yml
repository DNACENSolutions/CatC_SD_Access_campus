---
- name: Collect APIs response from Catalyst Center and print the output to a file
  hosts: catalyst_center_hosts
  connection: local
  gather_facts: no
  vars_files:
    # Either use the inventory file or the vars file
    - "{{ VARS_FILE_PATH }}"
  vars:
    state: merged
    catalyst_center_login: &catalyst_center_login
      dnac_host: "{{ catalyst_center_host }}"
      dnac_username: "{{ catalyst_center_username  }}"
      dnac_password: "{{ catalyst_center_password  }}"
      dnac_version: "{{ catalyst_center_version   }}"
      dnac_port: "{{ catalyst_center_port | default(443) }}"
      dnac_verify: "{{ catalyst_center_verify }}"
      config_verify: "{{ catalyst_center_config_verify | default(False) }}"
      dnac_debug: "{{ catalyst_center_debug | default(False) }}"
      dnac_log: "{{ catalyst_center_log | default(False) }}"
      dnac_log_level: "{{ catalyst_center_log_level | default('INFO') }}"
      dnac_log_file_path: "{{ catalyst_center_log_file_path |  default(omit) }}"
      dnac_log_append: "{{ catalyst_center_log_append |  default(False) }}"
    catalyst_center_url: "https://{{ catalyst_center_host }}:443"
    credentials: "{{ catalyst_center_username }}:{{ catalyst_center_password  }}"
    authentication: "Basic {{ credentials | b64encode }}"
  tasks:
    # fetch Catalyst Center token
    - name: Authenticate with DNA Center
      uri:
        url: "{{ catalyst_center_url }}/dna/system/api/v1/auth/token"
        method: POST
        headers:
          Content-Type: "application/json"
          Authorization: "{{authentication}}"
        validate_certs: "{{ catalyst_center_config_verify | default(False) }}"
        status_code: 200
      register: auth_response
    - name: Parse DNA Center Authentication Token
      set_fact:
        dnac_auth_token: "{{ auth_response.json.Token }}"
    #GET /dna/data/api/v1/clients
    - name: Fetch device details for serial numbers
      uri:
        url: "{{ catalyst_center_url }}/dna/data/api/v1/clients"
        method: GET
        headers:
          Content-Type: "application/json"
          X-Auth-Token: "{{ dnac_auth_token }}"
        body_format: json
        validate_certs: "{{ catalyst_center_config_verify | default(False) }}"
        status_code: 200
      register: clients_response
    
    - name: Print the device details in a file
      copy:
        content: "{{ clients_response.json | to_nice_json }}"
        dest: "api_v1_client.json"
      when: clients_response is defined

    # #GET /dna/intent/api/v1/diagnostics/system/performance/history
    # - name: Fetch system performance history
    #   uri:
    #     url: "{{ catalyst_center_url }}/dna/intent/api/v1/diagnostics/system/performance/history"
    #     method: GET
    #     headers:
    #       Content-Type: "application/json"
    #       X-Auth-Token: "{{ dnac_auth_token }}"
    #     body_format: json
    #     validate_certs: "{{ catalyst_center_config_verify | default(False) }}"
    #     status_code: 200
    #   register: system_performance_response
    # - name: Print the system performance history in a file
    #   copy:
    #     content: "{{ system_performance_response.json | to_nice_json }}"
    #     dest: "system_performance_history.json"
    #   when: system_performance_response is defined

    #GET /dna/data/api/v1/assuranceEvents?deviceFamily=Switches and Hubs
    - name: Fetch assurance events
      uri:
        url: "{{ catalyst_center_url }}/dna/data/api/v1/assuranceEvents?deviceFamily=Switches and Hubs"
        method: GET
        headers:
          Content-Type: "application/json"
          X-Auth-Token: "{{ dnac_auth_token }}"
        body_format: json
        validate_certs: "{{ catalyst_center_config_verify | default(False) }}"
        status_code: 200
      register: assurance_events_response
    - name: Print the assurance events in a file
      copy:
        content: "{{ assurance_events_response.json | to_nice_json }}"
        dest: "assurance_events.json"
      when: assurance_events_response is defined
    #GET /dna/intent/api/v1/network-device
